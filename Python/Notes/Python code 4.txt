Chris Stewart
Week 4:

def first_last6(nums):
  if  nums[len(nums) - 1] == 6:
    return True
  elif nums[0] == 6:
    return True
  else:
    return False
	
def same_first_last(nums):
  if len(nums) >= 1 and nums[len(nums) - 1] == nums[0]:
    return True
  else:
    return False

def make_pi():
  return [3,1,4]
  
def common_end(a, b):
  if a[0] == b[0] or a[len(a) - 1] == b[len(b) - 1]:
    return True
  else:
    return False

>>> p = (5,8)
>>> coordinates = [(5,8), (-6,3), (0,9), (5,-2)]
>>> for c in coordinates:
...     print((c[0] - p[0])**2 + ((c[1] - p[1])**2)**0.5)
...
0.0
126.0
26.0
10.0
>>> def voidfunc():
...     print("I don't return anything")
...
>>> voidfunc()
I don't return anything
>>> def count_nonempty_lists(ls):
...     count = 0
...     for x in ls:
...             if x:
...                     count += 1
...     return count
...
>>> count_nonempty_lists([[], [3], [3,3,3,4], [1], []])
3
>>> def count_nonempty_lists(lists, size = 1):
...     count = 0
...     for ls in lists:
...             if len(ls) >= size:
...                     count += 1
...     return count
...
>>> count_nonempty_lists([[], [3], [3,3,3,4], [1], []])
3
>>> def add_all(*numbers):
...     total = 0
...     for x in numbers:
...             total += x
...     return total
...
>>> add_all(4, 3 ,35)
42
>>>